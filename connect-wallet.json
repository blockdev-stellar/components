{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "connect-wallet",
  "type": "registry:component",
  "registryDependencies": [
    "dropdown-menu"
  ],
  "files": [
    {
      "path": "registry/rei/connect-wallet.tsx",
      "content": "import { useMemo } from \"react\";\nimport { Button } from \"./ui/button\";\nimport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuSeparator,\n} from \"./ui/dropdown-menu\";\n\nimport { useWallet } from \"~/hooks/use-wallet\";\nimport { useNativeBalance } from \"~/hooks/use-native-balance\";\n\n// Truncate a stellar address for display (e.g. GA... tail)\nfunction truncateAddress(addr: string, head = 4, tail = 4) {\n  if (addr.length <= head + tail) return addr;\n  return `${addr.slice(0, head)}…${addr.slice(-tail)}`;\n}\n\nexport function ConnectWallet() {\n  const { address, isConnected, connect, disconnect, loading } = useWallet();\n  const { balance } = useNativeBalance(address);\n\n  const displayAddress = useMemo(\n    () => (isConnected ? truncateAddress(address) : \"-\"),\n    [isConnected, address]\n  );\n\n  return (\n    <div className=\"flex items-center gap-3\">\n      {!isConnected ? (\n        <Button\n          onClick={() => void connect()}\n          variant=\"outline\"\n          size=\"sm\"\n          aria-label=\"Connect Wallet\"\n          disabled={loading}\n        >\n          {loading ? \"Connecting…\" : \"Connect Wallet\"}\n        </Button>\n      ) : (\n        <DropdownMenu>\n          <DropdownMenuTrigger asChild>\n            <Button variant=\"outline\" size=\"sm\" aria-label=\"Wallet menu\">\n              {displayAddress}\n            </Button>\n          </DropdownMenuTrigger>\n          <DropdownMenuContent align=\"end\" className=\"min-w-56\">\n            <DropdownMenuItem disabled className=\"flex flex-row items-center justify-between\">\n              <span>{balance === \"-\" ? \"-\" : balance}</span>\n              <span>XLM</span>\n            </DropdownMenuItem>\n            <DropdownMenuSeparator />\n            <DropdownMenuItem\n              onSelect={(e) => {\n                e.preventDefault();\n                void disconnect();\n              }}\n              variant=\"destructive\"\n            >\n              Disconnect\n            </DropdownMenuItem>\n          </DropdownMenuContent>\n        </DropdownMenu>\n      )}\n    </div>\n  );\n}\n",
      "type": "registry:component"
    }
  ]
}